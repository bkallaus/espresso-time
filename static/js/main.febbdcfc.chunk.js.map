{"version":3,"sources":["coffee-blur.png","home.js","page-layout.js","pour-over/pour-over.js","espresso/espresso.js","app-router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StyledPage","styled","div","_templateObject","StyledContainer","_templateObject2","StyledBanner","_templateObject3","props","img","StyledLink","Link","_templateObject4","Home","react_default","a","createElement","logo","to","page_layout_templateObject","StyledCard","page_layout_templateObject2","PageLayout","_ref","children","Fragment","page_layout_StyledContainer","react_router_dom","StyledForm","form","pour_over_templateObject","StyledLabel","label","pour_over_templateObject2","StyledInput","input","pour_over_templateObject3","PourOver","_useState","useState","_useState2","Object","slicedToArray","mililitersOfWater","setMiliLitersOfWater","_useState3","_useState4","gramsOfGrounds","setGramsOfGrounds","page_layout","htmlFor","id","value","type","onInput","e","miliLiters","target","grams","Espresso","AppRouter","basename","react_router","path","exact","component","App","app_router","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.febbdcfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coffee-blur.9aa9ef25.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport logo from './coffee-blur.png';\n\nconst StyledPage = styled.div`\n  height: 100vh;\n`;\n\nconst StyledContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n  height: 100%;\n`;\n\n\nconst StyledBanner = styled.div`\n  height: 100%;  \n  background-repeat: no-repeat;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  background-image: url(${props => props.img});\n`;\n\nconst StyledLink = styled(Link)`\n  color: white;\n  border: 1px solid white;\n  padding: 8px 16px;\n  border-radius: 4px; \n  margin: 8px;\n`;\n\nfunction Home() {\n  return (\n    <StyledPage>\n      <StyledBanner img={logo}>\n        <StyledContainer>\n          <StyledLink to=\"/pour-over\">Pour Over</StyledLink>\n          <StyledLink to=\"/espresso\">Espresso</StyledLink>\n        </StyledContainer>\n      </StyledBanner>\n    </StyledPage>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledContainer = styled.div`\n  display: flex;\n    \n  flex-direction: row;\n  \n  flex-wrap: wrap;\n  margin: 16px;\n`;\n\nconst StyledCard = styled.div`\n  padding: 16px;\n  height: 32px;\n  width: 80px;\n`;\n\nfunction PageLayout({children}) {\n  return (\n    <>\n      <StyledContainer>\n        <StyledCard><Link to=\"/\">Home</Link></StyledCard>\n        <StyledCard><Link to=\"/pour-over\">Pour Over</Link></StyledCard>\n        <StyledCard><Link to=\"/espresso\">Espresso</Link></StyledCard>\n      </StyledContainer>\n      {children}\n    </>\n  );\n}\n\nexport default PageLayout;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PageLayout from '../page-layout';\n\nconst StyledForm = styled.form`\n  align-items: center;\n  display: flex;\n\n  flex-wrap: wrap;\n  flex-direction: row; \n\n  margin: 40px 16px;\n  width: 100%;\n`;\n\nconst StyledLabel = styled.label`\n  width: 300px;\n  height: 100px;\n  margin: auto;\n`;\n\nconst StyledInput = styled.input`\n  padding: 8px;\n  border: 1px solid grey;\n  border-radius: 4px; \n  margin-left: 4px;\n`;\n\nfunction PourOver() {\n  const [mililitersOfWater, setMiliLitersOfWater] = useState(1000);\n  const [gramsOfGrounds, setGramsOfGrounds] = useState(60);\n\n  const setWaterThenGrams = (e) => {\n    const miliLiters = e.target.value;\n\n    setMiliLitersOfWater(miliLiters);\n    setGramsOfGrounds(0.06 * miliLiters);\n  };\n\n  const setGramsthenWater = (e) => {\n    const grams = e.target.value;\n\n    setGramsOfGrounds(grams);\n    setMiliLitersOfWater(grams / 0.06);\n  };\n\n  return (\n    <PageLayout>\n      <StyledForm>\n        <StyledLabel htmlFor=\"ouncesOfwater\">\n        Water (mL)\n          <StyledInput id=\"ouncesOfwater\" value={mililitersOfWater} type=\"number\" onInput={setWaterThenGrams} />\n        </StyledLabel>\n        <StyledLabel htmlFor=\"gramsOfGrounds\">\n        Grounds (g)\n          <StyledInput id=\"gramsOfGrounds\" value={gramsOfGrounds} type=\"number\" onInput={setGramsthenWater} />\n        </StyledLabel>\n      </StyledForm>\n    </PageLayout>\n  );\n}\n\nexport default PourOver;\n","import React from 'react';\n\nfunction Espresso() {\n  return (\n    <>\n      {'Espresso'}\n    </>\n  );\n}\n\nexport default Espresso;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './home';\nimport PourOver from './pour-over/pour-over';\nimport Espresso from './espresso/espresso';\n\nfunction AppRouter() {\n  return (\n    <HashRouter basename='/'>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/pour-over/\" component={PourOver} />\n        <Route path=\"/espresso/\" component={Espresso} />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default AppRouter;","import React from 'react';\nimport AppRouter from './app-router';\n\nconst App = () => <AppRouter />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}